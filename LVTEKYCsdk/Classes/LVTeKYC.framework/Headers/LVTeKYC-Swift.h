#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
#ifndef LVTEKYC_SWIFT_H
#define LVTEKYC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LVTeKYC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



SWIFT_CLASS("_TtC7LVTeKYC18CheckSdkInitResult")
@interface CheckSdkInitResult : NSObject
@property (nonatomic) BOOL isSdkInit;
@property (nonatomic, copy) NSString * _Nullable sdkId;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CircleLoadingViewSize, open) {
  CircleLoadingViewSizeSmall = 0,
  CircleLoadingViewSizeMedium = 1,
  CircleLoadingViewSizeLarge = 2,
};




SWIFT_CLASS("_TtC7LVTeKYC17EKYCConfiguration")
@interface EKYCConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nullable ekycSession;
@property (nonatomic, copy) NSString * _Nullable ocrTitle;
@property (nonatomic, copy) NSString * _Nullable ocrFrontsideSubtitle;
@property (nonatomic, copy) NSString * _Nullable ocrBacksideSubtitle;
@property (nonatomic, copy) NSString * _Nullable fmlcTitle;
@property (nonatomic, copy) NSString * _Nullable fmlcSubtitle;
- (void)setFLMCPoseList:(NSArray<NSNumber *> * _Nonnull)poseList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC7LVTeKYC9ExampleVC")
@interface ExampleVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, FMLCPoseItem, open) {
  FMLCPoseItemSmile = 0,
  FMLCPoseItemCloseEyes = 1,
  FMLCPoseItemTiltHeadLeft = 2,
  FMLCPoseItemTiltHeadRight = 3,
  FMLCPoseItemTurnLeft = 4,
  FMLCPoseItemTurnRight = 5,
};


SWIFT_CLASS_NAMED("KeychainHelper")
@interface KeychainHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface KeychainHelper (SWIFT_EXTENSION(LVTeKYC))
+ (NSString * _Nullable)getPublicKeyStringWithTag:(NSString * _Nonnull)tag SWIFT_WARN_UNUSED_RESULT;
@end



@class LVTEKYCCustomerDataAttr;

SWIFT_CLASS("_TtC7LVTeKYC19LVTEKYCCustomerData")
@interface LVTEKYCCustomerData : NSObject
@property (nonatomic, copy) NSString * _Nullable customerName;
@property (nonatomic, copy) NSString * _Nullable uniqueValue;
@property (nonatomic, copy) NSString * _Nullable uniqueType;
@property (nonatomic, copy) NSString * _Nullable people;
@property (nonatomic, copy) NSString * _Nullable addressCity;
@property (nonatomic, copy) NSString * _Nullable addressDistrict;
@property (nonatomic, copy) NSString * _Nullable addressPrecinct;
@property (nonatomic, copy) NSString * _Nullable fullAddress;
@property (nonatomic, copy) NSString * _Nullable placeId;
@property (nonatomic, copy) NSString * _Nullable placeIdDistrict;
@property (nonatomic, copy) NSString * _Nullable placeIdProvince;
@property (nonatomic, copy) NSString * _Nullable dob;
@property (nonatomic, copy) NSString * _Nullable issueDate;
@property (nonatomic, copy) NSString * _Nullable issuePlace;
@property (nonatomic, copy) NSString * _Nullable nationality;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable gender;
@property (nonatomic, copy) NSString * _Nullable nativePlace;
@property (nonatomic, copy) NSString * _Nullable nationalityName;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable jobCode;
@property (nonatomic, copy) NSString * _Nullable positionCode;
@property (nonatomic, copy) NSString * _Nullable currentAddress;
@property (nonatomic, copy) NSArray<LVTEKYCCustomerDataAttr *> * _Nullable ekycAttributeLs;
@property (nonatomic) NSInteger isUSA;
@property (nonatomic, copy) NSString * _Nullable currentAddressLine;
@property (nonatomic, copy) NSString * _Nullable currentPlaceId;
@property (nonatomic, copy) NSString * _Nullable isEmailVerify;
@property (nonatomic, copy) NSString * _Nullable addressLine;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC23LVTEKYCCustomerDataAttr")
@interface LVTEKYCCustomerDataAttr : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable orgValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC15LVTEKYCFaceData")
@interface LVTEKYCFaceData : NSObject
@property (nonatomic) double confidence;
@property (nonatomic, copy) NSString * _Nullable verifyResult;
@property (nonatomic, copy) NSString * _Nullable liveness;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class SDKInitParams;
@class SDKError;
@class SDKResultData;
@class UINavigationController;

SWIFT_CLASS("_TtC7LVTeKYC10LVTEKYCsdk")
@interface LVTEKYCsdk : NSObject
+ (BOOL)isInitial SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getSdkId SWIFT_WARN_UNUSED_RESULT;
+ (void)sdkInit:(SDKInitParams * _Nonnull)initParams successCallback:(void (^ _Nonnull)(void))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull))failureCallback;
+ (void)starteKYCFrom:(UIViewController * _Nonnull)fromVC animated:(BOOL)animateFlag config:(EKYCConfiguration * _Nonnull)config successCallback:(void (^ _Nonnull)(SDKResultData * _Nonnull, UINavigationController * _Nullable))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull, UINavigationController * _Nullable))failureCallback logTraceIdCallback:(void (^ _Nonnull)(NSString * _Nonnull))logTraceIdCallback;
+ (void)starteKYC:(EKYCConfiguration * _Nonnull)config successCallback:(void (^ _Nonnull)(SDKResultData * _Nonnull, UINavigationController * _Nullable))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull, UINavigationController * _Nullable))failureCallback logTraceIdCallback:(void (^ _Nonnull)(NSString * _Nonnull))logTraceIdCallback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIApplication;

@interface LVTEKYCsdk (SWIFT_EXTENSION(LVTeKYC))
+ (void)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
@end






SWIFT_CLASS("_TtC7LVTeKYC14ObjectMappable")
@interface ObjectMappable : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC12OCRImageItem")
@interface OCRImageItem : ObjectMappable
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, copy) NSString * _Nullable base64;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label base64:(NSString * _Nonnull)base64 OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class UIImage;

SWIFT_CLASS("_TtC7LVTeKYC9SDKConfig")
@interface SDKConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTitle;)
+ (NSString * _Nullable)ocrGuideTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideTooBlurImage;)
+ (UIImage * _Nullable)ocrGuideTooBlurImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTooBlurImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideTakeOffEdgeImage;)
+ (UIImage * _Nullable)ocrGuideTakeOffEdgeImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTakeOffEdgeImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideOverExpoesedImage;)
+ (UIImage * _Nullable)ocrGuideOverExpoesedImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideOverExpoesedImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine1;)
+ (NSString * _Nullable)ocrGuideTextLine1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine1:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine2;)
+ (NSString * _Nullable)ocrGuideTextLine2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine2:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine3;)
+ (NSString * _Nullable)ocrGuideTextLine3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine3:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideButtonText;)
+ (NSString * _Nullable)ocrGuideButtonText SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideButtonText:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrTitle;)
+ (NSString * _Nullable)ocrTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureFrontHint;)
+ (NSString * _Nullable)ocrCaptureFrontHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureFrontHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureBackHint;)
+ (NSString * _Nullable)ocrCaptureBackHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureBackHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureBottomHint;)
+ (NSString * _Nullable)ocrCaptureBottomHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureBottomHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrContinueButtonTitle;)
+ (NSString * _Nullable)ocrContinueButtonTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrContinueButtonTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrRetakeButtonTitle;)
+ (NSString * _Nullable)ocrRetakeButtonTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrRetakeButtonTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcTitle;)
+ (NSString * _Nullable)fmlcTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcSubtitle;)
+ (NSString * _Nullable)fmlcSubtitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcSubtitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcInstructionStep4;)
+ (NSString * _Nullable)fmlcInstructionStep4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcInstructionStep4:(NSString * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC7LVTeKYC8SDKError")
@interface SDKError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC12SDKErrorCode")
@interface SDKErrorCode : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull registerSDKFailed;)
+ (NSString * _Nonnull)registerSDKFailed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sessionIdEmpty;)
+ (NSString * _Nonnull)sessionIdEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidServiceEndpoint;)
+ (NSString * _Nonnull)invalidServiceEndpoint SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalid3DesKey;)
+ (NSString * _Nonnull)invalid3DesKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidServerPublicKey;)
+ (NSString * _Nonnull)invalidServerPublicKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidRequestJSON;)
+ (NSString * _Nonnull)invalidRequestJSON SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull encryptBodyError;)
+ (NSString * _Nonnull)encryptBodyError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseJSON;)
+ (NSString * _Nonnull)invalidResponseJSON SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseSecKey;)
+ (NSString * _Nonnull)invalidResponseSecKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseBodyData;)
+ (NSString * _Nonnull)invalidResponseBodyData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull decryptResponseBody;)
+ (NSString * _Nonnull)decryptResponseBody SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull goHome;)
+ (NSString * _Nonnull)goHome SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull noInternet;)
+ (NSString * _Nonnull)noInternet SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC13SDKInitParams")
@interface SDKInitParams : NSObject
@property (nonatomic, copy) NSString * _Nullable sdkId;
@property (nonatomic, copy) NSString * _Nullable sdkSecret;
@property (nonatomic, copy) NSString * _Nullable publicKey;
@property (nonatomic, copy) NSString * _Nullable partnerSignature;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSdkId:(NSString * _Nonnull)sdkId sdkSecret:(NSString * _Nonnull)sdkSecret publicKey:(NSString * _Nonnull)publicKey partnerSignature:(NSString * _Nonnull)partnerSignature OBJC_DESIGNATED_INITIALIZER;
@end

@class SDKResultImage;

SWIFT_CLASS("_TtC7LVTeKYC13SDKResultData")
@interface SDKResultData : NSObject
@property (nonatomic, strong) LVTEKYCCustomerData * _Nullable customerData;
@property (nonatomic, strong) LVTEKYCFaceData * _Nullable faceData;
@property (nonatomic, strong) UIImage * _Nullable idFrontImage;
@property (nonatomic, strong) UIImage * _Nullable idBackImage;
@property (nonatomic, copy) NSArray<SDKResultImage *> * _Nullable liveImages;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable ekycResultTime;
@property (nonatomic, copy) NSString * _Nullable ekycSession;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC14SDKResultImage")
@interface SDKResultImage : NSObject
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, strong) UIImage * _Nullable image;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nullable)label image:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC16SampleSDKInitRes")
@interface SampleSDKInitRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7LVTeKYC17SampleSDKLoginReq")
@interface SampleSDKLoginReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SampleSDKLoginResUserInfo;

SWIFT_CLASS("_TtC7LVTeKYC17SampleSDKLoginRes")
@interface SampleSDKLoginRes : NSObject
@property (nonatomic, copy) NSString * _Nonnull responseCode;
@property (nonatomic, copy) NSString * _Nullable responseMessage;
@property (nonatomic, copy) NSString * _Nullable responseTime;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, strong) SampleSDKLoginResUserInfo * _Nonnull userInfo;
@property (nonatomic, copy) NSString * _Nullable userSessionId;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC25SampleSDKLoginResUserInfo")
@interface SampleSDKLoginResUserInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable username;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, copy) NSString * _Nullable password;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKStartSessionReq")
@interface SampleSDKStartSessionReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKStartSessionRes")
@interface SampleSDKStartSessionRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKUpdateResultReq")
@interface SampleSDKUpdateResultReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKUpdateResultRes")
@interface SampleSDKUpdateResultRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Responsible for handling all delegate callbacks for the underlying session.
SWIFT_CLASS("_TtC7LVTeKYC15SessionDelegate")
@interface SessionDelegate : NSObject
/// Initializes the <code>SessionDelegate</code> instance.
///
/// returns:
/// The new <code>SessionDelegate</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Returns a <code>Bool</code> indicating whether the <code>SessionDelegate</code> implements or inherits a method that can respond
/// to a specified message.
/// \param selector A selector that identifies a message.
///
///
/// returns:
/// <code>true</code> if the receiver implements or inherits a method that can respond to selector, otherwise <code>false</code>.
- (BOOL)respondsToSelector:(SEL _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURLSession;
@class NSURLSessionDownloadTask;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDownloadDelegate>
/// Tells the delegate that a download task has finished downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that finished.
///
/// \param location A file URL for the temporary file. Because the file is temporary, you must either
/// open the file for reading or move it to a permanent location in your app’s sandbox
/// container directory before returning from this delegate method.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
/// Periodically informs the delegate about the download’s progress.
/// \param session The session containing the download task.
///
/// \param downloadTask The download task.
///
/// \param bytesWritten The number of bytes transferred since the last time this delegate
/// method was called.
///
/// \param totalBytesWritten The total number of bytes transferred so far.
///
/// \param totalBytesExpectedToWrite The expected length of the file, as provided by the Content-Length
/// header. If this header was not provided, the value is
/// <code>NSURLSessionTransferSizeUnknown</code>.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
/// Tells the delegate that the download task has resumed downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that resumed. See explanation in the discussion.
///
/// \param fileOffset If the file’s cache policy or last modified date prevents reuse of the
/// existing content, then this value is zero. Otherwise, this value is an
/// integer representing the number of bytes on disk that do not need to be
/// retrieved again.
///
/// \param expectedTotalBytes The expected length of the file, as provided by the Content-Length header.
/// If this header was not provided, the value is NSURLSessionTransferSizeUnknown.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end

@class NSURLAuthenticationChallenge;
@class NSURLCredential;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDelegate>
/// Tells the delegate that the session has been invalidated.
/// \param session The session object that was invalidated.
///
/// \param error The error that caused invalidation, or nil if the invalidation was explicit.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
/// Requests credentials from the delegate in response to a session-level authentication request from the
/// remote server.
/// \param session The session containing the task that requested authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate that all messages enqueued for a session have been delivered.
/// \param session The session that no longer has any outstanding requests.
///
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
@end

@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDataDelegate>
/// Tells the delegate that the data task received the initial reply (headers) from the server.
/// \param session The session containing the data task that received an initial reply.
///
/// \param dataTask The data task that received an initial reply.
///
/// \param response A URL response object populated with headers.
///
/// \param completionHandler A completion handler that your code calls to continue the transfer, passing a
/// constant to indicate whether the transfer should continue as a data task or
/// should become a download task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
/// Tells the delegate that the data task was changed to a download task.
/// \param session The session containing the task that was replaced by a download task.
///
/// \param dataTask The data task that was replaced by a download task.
///
/// \param downloadTask The new download task that replaced the data task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
/// Tells the delegate that the data task has received some of the expected data.
/// \param session The session containing the data task that provided data.
///
/// \param dataTask The data task that provided data.
///
/// \param data A data object containing the transferred data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
/// Asks the delegate whether the data (or upload) task should store the response in the cache.
/// \param session The session containing the data (or upload) task.
///
/// \param dataTask The data (or upload) task.
///
/// \param proposedResponse The default caching behavior. This behavior is determined based on the current
/// caching policy and the values of certain received headers, such as the Pragma
/// and Cache-Control headers.
///
/// \param completionHandler A block that your handler must call, providing either the original proposed
/// response, a modified version of that response, or NULL to prevent caching the
/// response. If your delegate implements this method, it must call this completion
/// handler; otherwise, your app leaks memory.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionStreamTask;
@class NSInputStream;
@class NSOutputStream;

SWIFT_AVAILABILITY(tvos,introduced=9.0) SWIFT_AVAILABILITY(macos,introduced=10.11) SWIFT_AVAILABILITY(ios,introduced=9.0)
@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionStreamDelegate>
/// Tells the delegate that the read side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session readClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the write side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session writeClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the system has determined that a better route to the host is available.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the stream task has been completed and provides the unopened stream objects.
/// \param session The session.
///
/// \param streamTask The stream task.
///
/// \param inputStream The new input stream.
///
/// \param outputStream The new output stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session streamTask:(NSURLSessionStreamTask * _Nonnull)streamTask didBecomeInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
@end

@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionTaskDelegate>
/// Tells the delegate that the remote server requested an HTTP redirect.
/// \param session The session containing the task whose request resulted in a redirect.
///
/// \param task The task whose request resulted in a redirect.
///
/// \param response An object containing the server’s response to the original request.
///
/// \param request A URL request object filled out with the new location.
///
/// \param completionHandler A closure that your handler should call with either the value of the request
/// parameter, a modified URL request object, or NULL to refuse the redirect and
/// return the body of the redirect response.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
/// Requests credentials from the delegate in response to an authentication request from the remote server.
/// \param session The session containing the task whose request requires authentication.
///
/// \param task The task whose request requires authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate when a task requires a new request body stream to send to the remote server.
/// \param session The session containing the task that needs a new body stream.
///
/// \param task The task that needs a new body stream.
///
/// \param completionHandler A completion handler that your delegate method should call with the new body stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
/// Periodically informs the delegate of the progress of sending body content to the server.
/// \param session The session containing the data task.
///
/// \param task The data task.
///
/// \param bytesSent The number of bytes sent since the last time this delegate method was called.
///
/// \param totalBytesSent The total number of bytes sent so far.
///
/// \param totalBytesExpectedToSend The expected length of the body data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
/// Tells the delegate that the session finished collecting metrics for the task.
/// \param session The session collecting the metrics.
///
/// \param task The task whose metrics have been collected.
///
/// \param metrics The collected metrics.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics SWIFT_AVAILABILITY(tvos,introduced=10.0) SWIFT_AVAILABILITY(macos,introduced=10.12) SWIFT_AVAILABILITY(ios,introduced=10.0);
/// Tells the delegate that the task finished transferring data.
/// \param session The session containing the task whose request finished transferring data.
///
/// \param task The task whose request finished transferring data.
///
/// \param error If an error occurred, an error object indicating how the transfer failed, otherwise nil.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end


/// The task delegate is responsible for handling all delegate callbacks for the underlying task as well as
/// executing all operations attached to the serial operation queue upon task completion.
SWIFT_CLASS("_TtC7LVTeKYC12TaskDelegate")
@interface TaskDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end























@interface UINavigationController (SWIFT_EXTENSION(LVTeKYC))
- (void)lvtEKYC_pushViewController:(UIViewController * _Nonnull)newController animated:(BOOL)flag;
- (void)lvtEKYC_popViewControllerWithAnimated:(BOOL)flag;
@end



















@class UITapGestureRecognizer;

@interface UIViewController (SWIFT_EXTENSION(LVTeKYC))
- (void)viewDidTapped:(UITapGestureRecognizer * _Nonnull)gesture;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.3.1 (swiftlang-1200.0.41 clang-1200.0.32.8)
#ifndef LVTEKYC_SWIFT_H
#define LVTEKYC_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LVTeKYC",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif



SWIFT_CLASS("_TtC7LVTeKYC18CheckSdkInitResult")
@interface CheckSdkInitResult : NSObject
@property (nonatomic) BOOL isSdkInit;
@property (nonatomic, copy) NSString * _Nullable sdkId;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, CircleLoadingViewSize, open) {
  CircleLoadingViewSizeSmall = 0,
  CircleLoadingViewSizeMedium = 1,
  CircleLoadingViewSizeLarge = 2,
};




SWIFT_CLASS("_TtC7LVTeKYC17EKYCConfiguration")
@interface EKYCConfiguration : NSObject
@property (nonatomic, copy) NSString * _Nullable ekycSession;
@property (nonatomic, copy) NSString * _Nullable ocrTitle;
@property (nonatomic, copy) NSString * _Nullable ocrFrontsideSubtitle;
@property (nonatomic, copy) NSString * _Nullable ocrBacksideSubtitle;
@property (nonatomic, copy) NSString * _Nullable fmlcTitle;
@property (nonatomic, copy) NSString * _Nullable fmlcSubtitle;
- (void)setFLMCPoseList:(NSArray<NSNumber *> * _Nonnull)poseList;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC7LVTeKYC9ExampleVC")
@interface ExampleVC : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, FMLCPoseItem, open) {
  FMLCPoseItemSmile = 0,
  FMLCPoseItemCloseEyes = 1,
  FMLCPoseItemTiltHeadLeft = 2,
  FMLCPoseItemTiltHeadRight = 3,
  FMLCPoseItemTurnLeft = 4,
  FMLCPoseItemTurnRight = 5,
};


SWIFT_CLASS_NAMED("KeychainHelper")
@interface KeychainHelper : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface KeychainHelper (SWIFT_EXTENSION(LVTeKYC))
+ (NSString * _Nullable)getPublicKeyStringWithTag:(NSString * _Nonnull)tag SWIFT_WARN_UNUSED_RESULT;
@end



@class LVTEKYCCustomerDataAttr;

SWIFT_CLASS("_TtC7LVTeKYC19LVTEKYCCustomerData")
@interface LVTEKYCCustomerData : NSObject
@property (nonatomic, copy) NSString * _Nullable customerName;
@property (nonatomic, copy) NSString * _Nullable uniqueValue;
@property (nonatomic, copy) NSString * _Nullable uniqueType;
@property (nonatomic, copy) NSString * _Nullable people;
@property (nonatomic, copy) NSString * _Nullable addressCity;
@property (nonatomic, copy) NSString * _Nullable addressDistrict;
@property (nonatomic, copy) NSString * _Nullable addressPrecinct;
@property (nonatomic, copy) NSString * _Nullable fullAddress;
@property (nonatomic, copy) NSString * _Nullable placeId;
@property (nonatomic, copy) NSString * _Nullable placeIdDistrict;
@property (nonatomic, copy) NSString * _Nullable placeIdProvince;
@property (nonatomic, copy) NSString * _Nullable dob;
@property (nonatomic, copy) NSString * _Nullable issueDate;
@property (nonatomic, copy) NSString * _Nullable issuePlace;
@property (nonatomic, copy) NSString * _Nullable nationality;
@property (nonatomic, copy) NSString * _Nullable email;
@property (nonatomic, copy) NSString * _Nullable gender;
@property (nonatomic, copy) NSString * _Nullable nativePlace;
@property (nonatomic, copy) NSString * _Nullable nationalityName;
@property (nonatomic, copy) NSString * _Nullable expiryDate;
@property (nonatomic, copy) NSString * _Nullable jobCode;
@property (nonatomic, copy) NSString * _Nullable positionCode;
@property (nonatomic, copy) NSString * _Nullable currentAddress;
@property (nonatomic, copy) NSArray<LVTEKYCCustomerDataAttr *> * _Nullable ekycAttributeLs;
@property (nonatomic) NSInteger isUSA;
@property (nonatomic, copy) NSString * _Nullable currentAddressLine;
@property (nonatomic, copy) NSString * _Nullable currentPlaceId;
@property (nonatomic, copy) NSString * _Nullable isEmailVerify;
@property (nonatomic, copy) NSString * _Nullable addressLine;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC23LVTEKYCCustomerDataAttr")
@interface LVTEKYCCustomerDataAttr : NSObject
@property (nonatomic, copy) NSString * _Nullable name;
@property (nonatomic, copy) NSString * _Nullable orgValue;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC15LVTEKYCFaceData")
@interface LVTEKYCFaceData : NSObject
@property (nonatomic) double confidence;
@property (nonatomic, copy) NSString * _Nullable verifyResult;
@property (nonatomic, copy) NSString * _Nullable liveness;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end

@class SDKInitParams;
@class SDKError;
@class SDKResultData;
@class UINavigationController;

SWIFT_CLASS("_TtC7LVTeKYC10LVTEKYCsdk")
@interface LVTEKYCsdk : NSObject
+ (BOOL)isInitial SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nullable)getSdkId SWIFT_WARN_UNUSED_RESULT;
+ (void)sdkInit:(SDKInitParams * _Nonnull)initParams successCallback:(void (^ _Nonnull)(void))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull))failureCallback;
+ (void)starteKYCFrom:(UIViewController * _Nonnull)fromVC animated:(BOOL)animateFlag config:(EKYCConfiguration * _Nonnull)config successCallback:(void (^ _Nonnull)(SDKResultData * _Nonnull, UINavigationController * _Nullable))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull, UINavigationController * _Nullable))failureCallback logTraceIdCallback:(void (^ _Nonnull)(NSString * _Nonnull))logTraceIdCallback;
+ (void)starteKYC:(EKYCConfiguration * _Nonnull)config successCallback:(void (^ _Nonnull)(SDKResultData * _Nonnull, UINavigationController * _Nullable))successCallback failureCallback:(void (^ _Nonnull)(SDKError * _Nonnull, UINavigationController * _Nullable))failureCallback logTraceIdCallback:(void (^ _Nonnull)(NSString * _Nonnull))logTraceIdCallback;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIApplication;

@interface LVTEKYCsdk (SWIFT_EXTENSION(LVTeKYC))
+ (void)application:(UIApplication * _Nonnull)application didFinishLaunchingWithOptions:(NSDictionary<UIApplicationLaunchOptionsKey, id> * _Nullable)launchOptions;
@end






SWIFT_CLASS("_TtC7LVTeKYC14ObjectMappable")
@interface ObjectMappable : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC12OCRImageItem")
@interface OCRImageItem : ObjectMappable
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, copy) NSString * _Nullable base64;
- (nonnull instancetype)initWithLabel:(NSString * _Nonnull)label base64:(NSString * _Nonnull)base64 OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


@class UIImage;

SWIFT_CLASS("_TtC7LVTeKYC9SDKConfig")
@interface SDKConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTitle;)
+ (NSString * _Nullable)ocrGuideTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideTooBlurImage;)
+ (UIImage * _Nullable)ocrGuideTooBlurImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTooBlurImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideTakeOffEdgeImage;)
+ (UIImage * _Nullable)ocrGuideTakeOffEdgeImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTakeOffEdgeImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) UIImage * _Nullable ocrGuideOverExpoesedImage;)
+ (UIImage * _Nullable)ocrGuideOverExpoesedImage SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideOverExpoesedImage:(UIImage * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine1;)
+ (NSString * _Nullable)ocrGuideTextLine1 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine1:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine2;)
+ (NSString * _Nullable)ocrGuideTextLine2 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine2:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideTextLine3;)
+ (NSString * _Nullable)ocrGuideTextLine3 SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideTextLine3:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrGuideButtonText;)
+ (NSString * _Nullable)ocrGuideButtonText SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrGuideButtonText:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrTitle;)
+ (NSString * _Nullable)ocrTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureFrontHint;)
+ (NSString * _Nullable)ocrCaptureFrontHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureFrontHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureBackHint;)
+ (NSString * _Nullable)ocrCaptureBackHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureBackHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrCaptureBottomHint;)
+ (NSString * _Nullable)ocrCaptureBottomHint SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrCaptureBottomHint:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrContinueButtonTitle;)
+ (NSString * _Nullable)ocrContinueButtonTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrContinueButtonTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable ocrRetakeButtonTitle;)
+ (NSString * _Nullable)ocrRetakeButtonTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setOcrRetakeButtonTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcTitle;)
+ (NSString * _Nullable)fmlcTitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcTitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcSubtitle;)
+ (NSString * _Nullable)fmlcSubtitle SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcSubtitle:(NSString * _Nullable)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSString * _Nullable fmlcInstructionStep4;)
+ (NSString * _Nullable)fmlcInstructionStep4 SWIFT_WARN_UNUSED_RESULT;
+ (void)setFmlcInstructionStep4:(NSString * _Nullable)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC7LVTeKYC8SDKError")
@interface SDKError : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable code;
@property (nonatomic, readonly, copy) NSString * _Nullable message;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithCode:(NSString * _Nonnull)code message:(NSString * _Nonnull)message OBJC_DESIGNATED_INITIALIZER;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC12SDKErrorCode")
@interface SDKErrorCode : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull registerSDKFailed;)
+ (NSString * _Nonnull)registerSDKFailed SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sessionIdEmpty;)
+ (NSString * _Nonnull)sessionIdEmpty SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidServiceEndpoint;)
+ (NSString * _Nonnull)invalidServiceEndpoint SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalid3DesKey;)
+ (NSString * _Nonnull)invalid3DesKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidServerPublicKey;)
+ (NSString * _Nonnull)invalidServerPublicKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidRequestJSON;)
+ (NSString * _Nonnull)invalidRequestJSON SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull encryptBodyError;)
+ (NSString * _Nonnull)encryptBodyError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseJSON;)
+ (NSString * _Nonnull)invalidResponseJSON SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseSecKey;)
+ (NSString * _Nonnull)invalidResponseSecKey SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull invalidResponseBodyData;)
+ (NSString * _Nonnull)invalidResponseBodyData SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull decryptResponseBody;)
+ (NSString * _Nonnull)decryptResponseBody SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull goHome;)
+ (NSString * _Nonnull)goHome SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull noInternet;)
+ (NSString * _Nonnull)noInternet SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC13SDKInitParams")
@interface SDKInitParams : NSObject
@property (nonatomic, copy) NSString * _Nullable sdkId;
@property (nonatomic, copy) NSString * _Nullable sdkSecret;
@property (nonatomic, copy) NSString * _Nullable publicKey;
@property (nonatomic, copy) NSString * _Nullable partnerSignature;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithSdkId:(NSString * _Nonnull)sdkId sdkSecret:(NSString * _Nonnull)sdkSecret publicKey:(NSString * _Nonnull)publicKey partnerSignature:(NSString * _Nonnull)partnerSignature OBJC_DESIGNATED_INITIALIZER;
@end

@class SDKResultImage;

SWIFT_CLASS("_TtC7LVTeKYC13SDKResultData")
@interface SDKResultData : NSObject
@property (nonatomic, strong) LVTEKYCCustomerData * _Nullable customerData;
@property (nonatomic, strong) LVTEKYCFaceData * _Nullable faceData;
@property (nonatomic, strong) UIImage * _Nullable idFrontImage;
@property (nonatomic, strong) UIImage * _Nullable idBackImage;
@property (nonatomic, copy) NSArray<SDKResultImage *> * _Nullable liveImages;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, copy) NSString * _Nullable ekycResultTime;
@property (nonatomic, copy) NSString * _Nullable ekycSession;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC14SDKResultImage")
@interface SDKResultImage : NSObject
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, strong) UIImage * _Nullable image;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithLabel:(NSString * _Nullable)label image:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC16SampleSDKInitRes")
@interface SampleSDKInitRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC7LVTeKYC17SampleSDKLoginReq")
@interface SampleSDKLoginReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class SampleSDKLoginResUserInfo;

SWIFT_CLASS("_TtC7LVTeKYC17SampleSDKLoginRes")
@interface SampleSDKLoginRes : NSObject
@property (nonatomic, copy) NSString * _Nonnull responseCode;
@property (nonatomic, copy) NSString * _Nullable responseMessage;
@property (nonatomic, copy) NSString * _Nullable responseTime;
@property (nonatomic, copy) NSString * _Nullable signature;
@property (nonatomic, strong) SampleSDKLoginResUserInfo * _Nonnull userInfo;
@property (nonatomic, copy) NSString * _Nullable userSessionId;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
@end


SWIFT_CLASS("_TtC7LVTeKYC25SampleSDKLoginResUserInfo")
@interface SampleSDKLoginResUserInfo : NSObject
@property (nonatomic, copy) NSString * _Nullable username;
@property (nonatomic, copy) NSString * _Nullable userId;
@property (nonatomic, copy) NSString * _Nullable fullName;
@property (nonatomic, copy) NSString * _Nullable password;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKStartSessionReq")
@interface SampleSDKStartSessionReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKStartSessionRes")
@interface SampleSDKStartSessionRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKUpdateResultReq")
@interface SampleSDKUpdateResultReq : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC7LVTeKYC24SampleSDKUpdateResultRes")
@interface SampleSDKUpdateResultRes : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Responsible for handling all delegate callbacks for the underlying session.
SWIFT_CLASS("_TtC7LVTeKYC15SessionDelegate")
@interface SessionDelegate : NSObject
/// Initializes the <code>SessionDelegate</code> instance.
///
/// returns:
/// The new <code>SessionDelegate</code> instance.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Returns a <code>Bool</code> indicating whether the <code>SessionDelegate</code> implements or inherits a method that can respond
/// to a specified message.
/// \param selector A selector that identifies a message.
///
///
/// returns:
/// <code>true</code> if the receiver implements or inherits a method that can respond to selector, otherwise <code>false</code>.
- (BOOL)respondsToSelector:(SEL _Nonnull)selector SWIFT_WARN_UNUSED_RESULT;
@end

@class NSURLSession;
@class NSURLSessionDownloadTask;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDownloadDelegate>
/// Tells the delegate that a download task has finished downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that finished.
///
/// \param location A file URL for the temporary file. Because the file is temporary, you must either
/// open the file for reading or move it to a permanent location in your app’s sandbox
/// container directory before returning from this delegate method.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
/// Periodically informs the delegate about the download’s progress.
/// \param session The session containing the download task.
///
/// \param downloadTask The download task.
///
/// \param bytesWritten The number of bytes transferred since the last time this delegate
/// method was called.
///
/// \param totalBytesWritten The total number of bytes transferred so far.
///
/// \param totalBytesExpectedToWrite The expected length of the file, as provided by the Content-Length
/// header. If this header was not provided, the value is
/// <code>NSURLSessionTransferSizeUnknown</code>.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
/// Tells the delegate that the download task has resumed downloading.
/// \param session The session containing the download task that finished.
///
/// \param downloadTask The download task that resumed. See explanation in the discussion.
///
/// \param fileOffset If the file’s cache policy or last modified date prevents reuse of the
/// existing content, then this value is zero. Otherwise, this value is an
/// integer representing the number of bytes on disk that do not need to be
/// retrieved again.
///
/// \param expectedTotalBytes The expected length of the file, as provided by the Content-Length header.
/// If this header was not provided, the value is NSURLSessionTransferSizeUnknown.
///
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
@end

@class NSURLAuthenticationChallenge;
@class NSURLCredential;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDelegate>
/// Tells the delegate that the session has been invalidated.
/// \param session The session object that was invalidated.
///
/// \param error The error that caused invalidation, or nil if the invalidation was explicit.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
/// Requests credentials from the delegate in response to a session-level authentication request from the
/// remote server.
/// \param session The session containing the task that requested authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate that all messages enqueued for a session have been delivered.
/// \param session The session that no longer has any outstanding requests.
///
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession * _Nonnull)session;
@end

@class NSURLSessionDataTask;
@class NSURLResponse;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionDataDelegate>
/// Tells the delegate that the data task received the initial reply (headers) from the server.
/// \param session The session containing the data task that received an initial reply.
///
/// \param dataTask The data task that received an initial reply.
///
/// \param response A URL response object populated with headers.
///
/// \param completionHandler A completion handler that your code calls to continue the transfer, passing a
/// constant to indicate whether the transfer should continue as a data task or
/// should become a download task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveResponse:(NSURLResponse * _Nonnull)response completionHandler:(void (^ _Nonnull)(NSURLSessionResponseDisposition))completionHandler;
/// Tells the delegate that the data task was changed to a download task.
/// \param session The session containing the task that was replaced by a download task.
///
/// \param dataTask The data task that was replaced by a download task.
///
/// \param downloadTask The new download task that replaced the data task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didBecomeDownloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask;
/// Tells the delegate that the data task has received some of the expected data.
/// \param session The session containing the data task that provided data.
///
/// \param dataTask The data task that provided data.
///
/// \param data A data object containing the transferred data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
/// Asks the delegate whether the data (or upload) task should store the response in the cache.
/// \param session The session containing the data (or upload) task.
///
/// \param dataTask The data (or upload) task.
///
/// \param proposedResponse The default caching behavior. This behavior is determined based on the current
/// caching policy and the values of certain received headers, such as the Pragma
/// and Cache-Control headers.
///
/// \param completionHandler A block that your handler must call, providing either the original proposed
/// response, a modified version of that response, or NULL to prevent caching the
/// response. If your delegate implements this method, it must call this completion
/// handler; otherwise, your app leaks memory.
///
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionStreamTask;
@class NSInputStream;
@class NSOutputStream;

SWIFT_AVAILABILITY(tvos,introduced=9.0) SWIFT_AVAILABILITY(macos,introduced=10.11) SWIFT_AVAILABILITY(ios,introduced=9.0)
@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionStreamDelegate>
/// Tells the delegate that the read side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session readClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the write side of the connection has been closed.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session writeClosedForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the system has determined that a better route to the host is available.
/// \param session The session.
///
/// \param streamTask The stream task.
///
- (void)URLSession:(NSURLSession * _Nonnull)session betterRouteDiscoveredForStreamTask:(NSURLSessionStreamTask * _Nonnull)streamTask;
/// Tells the delegate that the stream task has been completed and provides the unopened stream objects.
/// \param session The session.
///
/// \param streamTask The stream task.
///
/// \param inputStream The new input stream.
///
/// \param outputStream The new output stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session streamTask:(NSURLSessionStreamTask * _Nonnull)streamTask didBecomeInputStream:(NSInputStream * _Nonnull)inputStream outputStream:(NSOutputStream * _Nonnull)outputStream;
@end

@class NSURLSessionTask;
@class NSHTTPURLResponse;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(LVTeKYC)) <NSURLSessionTaskDelegate>
/// Tells the delegate that the remote server requested an HTTP redirect.
/// \param session The session containing the task whose request resulted in a redirect.
///
/// \param task The task whose request resulted in a redirect.
///
/// \param response An object containing the server’s response to the original request.
///
/// \param request A URL request object filled out with the new location.
///
/// \param completionHandler A closure that your handler should call with either the value of the request
/// parameter, a modified URL request object, or NULL to refuse the redirect and
/// return the body of the redirect response.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
/// Requests credentials from the delegate in response to an authentication request from the remote server.
/// \param session The session containing the task whose request requires authentication.
///
/// \param task The task whose request requires authentication.
///
/// \param challenge An object that contains the request for authentication.
///
/// \param completionHandler A handler that your delegate method must call providing the disposition
/// and credential.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
/// Tells the delegate when a task requires a new request body stream to send to the remote server.
/// \param session The session containing the task that needs a new body stream.
///
/// \param task The task that needs a new body stream.
///
/// \param completionHandler A completion handler that your delegate method should call with the new body stream.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
/// Periodically informs the delegate of the progress of sending body content to the server.
/// \param session The session containing the data task.
///
/// \param task The data task.
///
/// \param bytesSent The number of bytes sent since the last time this delegate method was called.
///
/// \param totalBytesSent The total number of bytes sent so far.
///
/// \param totalBytesExpectedToSend The expected length of the body data.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
/// Tells the delegate that the session finished collecting metrics for the task.
/// \param session The session collecting the metrics.
///
/// \param task The task whose metrics have been collected.
///
/// \param metrics The collected metrics.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics SWIFT_AVAILABILITY(tvos,introduced=10.0) SWIFT_AVAILABILITY(macos,introduced=10.12) SWIFT_AVAILABILITY(ios,introduced=10.0);
/// Tells the delegate that the task finished transferring data.
/// \param session The session containing the task whose request finished transferring data.
///
/// \param task The task whose request finished transferring data.
///
/// \param error If an error occurred, an error object indicating how the transfer failed, otherwise nil.
///
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
@end


/// The task delegate is responsible for handling all delegate callbacks for the underlying task as well as
/// executing all operations attached to the serial operation queue upon task completion.
SWIFT_CLASS("_TtC7LVTeKYC12TaskDelegate")
@interface TaskDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end























@interface UINavigationController (SWIFT_EXTENSION(LVTeKYC))
- (void)lvtEKYC_pushViewController:(UIViewController * _Nonnull)newController animated:(BOOL)flag;
- (void)lvtEKYC_popViewControllerWithAnimated:(BOOL)flag;
@end



















@class UITapGestureRecognizer;

@interface UIViewController (SWIFT_EXTENSION(LVTeKYC))
- (void)viewDidTapped:(UITapGestureRecognizer * _Nonnull)gesture;
@end


#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
